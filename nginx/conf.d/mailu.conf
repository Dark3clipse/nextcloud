# Main HTTP server
server {
	# Favicon stuff
	root /static;

	server_name  hadash.nl;

	# Variables for proxifying
	set $admin admin;
	set $antispam antispam:11334;
	set $webmail webmail;
	set $webdav webdav:5232;


	# Always listen over HTTP
	listen 80;
	listen [::]:80;

	# Only enable HTTPS if TLS is enabled with no error and not on kubernetes

	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	ssl_certificate     /etc/letsencrypt/live/hadash.nl/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/hadash.nl/privkey.pem;
	ssl_session_timeout 1d;
	ssl_session_tickets off;
	ssl_dhparam /etc/letsencrypt/dhparam-2048.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	ssl_prefer_server_ciphers off;


	ssl_session_cache shared:SSLHTTP:50m;
	add_header Strict-Transport-Security 'max-age=31536000';


	if ($proxy_x_forwarded_proto = http) {
		return 301 https://$host$request_uri;
	}



	# Remove headers to prevent duplication and information disclosure
	proxy_hide_header X-XSS-Protection;
	proxy_hide_header X-Powered-By;

	add_header X-Frame-Options 'SAMEORIGIN';
	add_header X-Content-Type-Options 'nosniff';
	add_header X-Permitted-Cross-Domain-Policies 'none';
	add_header X-XSS-Protection '1; mode=block';
	add_header Referrer-Policy 'same-origin';

	# In any case, enable the proxy for certbot if the flavor is letsencrypt and not on kubernetes


	# If TLS is failing, prevent access to anything except certbot


	include /overrides/*.conf;

	# Actual logic

	#location / {
	#	try_files $uri /admin;
	#}



	location /client {

		rewrite ^(/client)$ $1/ permanent;
		rewrite ^/client/(.*) /$1 break;

		include /etc/nginx/proxy.conf;
		client_max_body_size 208388608;
		proxy_pass http://$webmail;
	}


	location /admin {

		rewrite ^(/admin)$ $1/ permanent;
		rewrite ^/admin/(.*) /$1 break;

		include /etc/nginx/proxy.conf;
		client_max_body_size 208388608;
		proxy_pass http://$admin;
	}


	location /webdav {
		rewrite ^/webdav/(.*) /$1 break;
		auth_request /internal/auth/basic;
		auth_request_set $user $upstream_http_x_user;
		include /etc/nginx/proxy.conf;
		proxy_set_header X-Remote-User $user;
		proxy_set_header X-Script-Name /webdav;
		proxy_pass http://$webdav;
	}

	location ~ ^/.well-known/(carddav|caldav) {
		return 301 /webdav/;
	}



	location /internal {
		internal;

		proxy_set_header Authorization $http_authorization;
		proxy_pass_header Authorization;
		proxy_pass http://$admin;
		proxy_pass_request_body off;
		proxy_set_header Content-Length "";
	}

	location /health {
		return 204;
	}
}

# Forwarding authentication server
server {
	# Variables for proxifying
	set $admin admin;

	listen 127.0.0.1:8000;

	location / {
		proxy_pass http://$admin/internal$request_uri;
	}
}